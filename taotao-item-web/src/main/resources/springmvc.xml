<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	 xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
        http://code.alibabatech.com/schema/dubbo 
        http://code.alibabatech.com/schema/dubbo/dubbo.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-4.2.xsd">

	<!-- 注解扫描 扫描controller层 -->
	<context:component-scan base-package="com.taotao.item.controller" />
	<!-- 注解驱动 配置处理器映射器和处理器适配器 -->

	<mvc:annotation-driven />
	<!--
            注解驱动ResponseBody 中文乱码解决
         -->
	<!-- 定义文件上传解析器 -->
	<bean id="multipartResolver"
		  class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 设定默认编码 -->
		<property name="defaultEncoding" value="UTF-8"></property>
		<!-- 设定文件上传的最大值5MB，5*1024*1024 -->
		<property name="maxUploadSize" value="5242880"></property>
	</bean>
	<mvc:annotation-driven >
		<mvc:message-converters register-defaults="true">
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg value="UTF-8"/>
				<property name="supportedMediaTypes">
					<list>
						<bean class="org.springframework.http.MediaType">
							<constructor-arg index="0" value="text"/>
							<constructor-arg index="1" value="plain"/>
							<constructor-arg index="2" value="UTF-8"/>
						</bean>
						<bean class="org.springframework.http.MediaType">
							<constructor-arg index="0" value="*"/>
							<constructor-arg index="1" value="*"/>
							<constructor-arg index="2" value="UTF-8"/>
						</bean>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	<!-- freemaker与spring整合-->
	<bean id="freemarkerConfig"
		  class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/ftl/" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>

	<!-- 帮我们配置前缀和后缀 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 引用dubbo服务 -->
	<dubbo:application name="taotao-item-web" />
	<dubbo:registry protocol="zookeeper"
		address="47.107.84.1:2181" />
<!--	<dubbo:reference interface="com.taotao.service.ItemService"
		id="itemService" />-->
	<dubbo:reference interface="com.taotao.service.ItemService"
					 id="itemService" timeout="5000000"/>
	<!--真正可以产生Connection的ConnectionFactory 由对应的jms厂商提供-->
	<bean id="targetConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL" value="tcp://47.107.84.1:61616"/>
	</bean>
	<!--spring用于真正的管理Conectionfactory的Conectionfactory-->

	<bean id="connectionFactory" class="org.springframework.jms.connection.SingleConnectionFactory">
		<property name="targetConnectionFactory" ref="targetConnectionFactory"/>
	</bean>
	<!--消费者-->

	<!--点对点-->
	<bean id="queueDestination" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg >
			<!--点对点发送的名字，可以随便取-->
			<value>queue</value>
		</constructor-arg>
	</bean>
	<bean id="topicDestination" class="org.apache.activemq.command.ActiveMQTopic">
		<!--订阅与发布发送的名字 商品改变消息-->
		<constructor-arg value="item-change-topic"></constructor-arg>
	</bean>
	<!--d订阅者或者点对点的消费者 他们不需要消费对象的 只需要一个监听器对象来监听数据就够了-->
	<!--配置一个监听器-->
	<bean id="myMessageListener" class="com.taotao.item.listener.MyMessageListener"></bean>

	<bean class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory"/>
		<property name="destination" ref="topicDestination"/>
		<property name="messageListener" ref="myMessageListener"/>
	</bean>

</beans>
